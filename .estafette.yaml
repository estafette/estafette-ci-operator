builder:
  track: dev

labels:
  app-group: estafette-ci
  team: estafette-team
  language: golang

version:
  semver:
    major: 0
    minor: 1

stages:
  build:
    image: golang:1.13.4-alpine3.10
    env:
      CGO_ENABLED: 0
      GOOS: linux
      GOGC: off
    commands:
    - apk -U add curl
    - curl -sL https://go.kubebuilder.io/dl/2.2.0/linux/amd64 | tar -xz -C /tmp/
    - mv /tmp/kubebuilder_2.2.0_linux_amd64 /usr/local/kubebuilder
    - export PATH=$PATH:/usr/local/kubebuilder/bin
    - go test ./...
    - go build -a -installsuffix cgo -ldflags "-X main.appgroup=${ESTAFETTE_LABEL_APP_GROUP} -X main.app=${ESTAFETTE_GIT_NAME} -X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}" -o ./publish/${ESTAFETTE_GIT_NAME} .

  bake:
    image: extensions/docker:dev
    action: build
    inline: |
      FROM scratch

      LABEL maintainer="estafette.io" \
            description="The ${ESTAFETTE_GIT_NAME} is the component that handles initializing and updating Estafette CI clusters and configuring it"

      COPY ca-certificates.crt /etc/ssl/certs/
      COPY ${ESTAFETTE_GIT_NAME} /

      ENV GRACEFUL_SHUTDOWN_DELAY_SECONDS="15"

      ENTRYPOINT ["/${ESTAFETTE_GIT_NAME}"]
    repositories:
    - estafette
    path: ./publish
    copy:
    - /etc/ssl/certs/ca-certificates.crt

  check-container:
    parallelStages:
      check-efficiency:
        image: extensions/docker:dev
        action: dive
        repositories:
        - estafette

      vulnerability-scan:
        image: extensions/docker:dev
        action: trivy
        repositories:
        - estafette

  push-to-docker-hub:
    image: extensions/docker:dev
    action: push
    repositories:
    - estafette

  slack-notify:
    image: extensions/slack-build-status:dev
    workspace: estafette
    channels:
    - '#build-status'
    when:
      status == 'succeeded' ||
      status == 'failed'